{"version":3,"file":"angularx-qrcode.component.js","sources":["../../../src/components/angularx-qrcode/angularx-qrcode.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  PLATFORM_ID,\n  SimpleChange,\n} from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\ndeclare var require: any;\nlet QRCode: any;\n\n@Component({\n  selector: 'qrcode',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: ''\n})\n\nexport class QRCodeComponent implements OnChanges, AfterViewInit {\n\n  /** @internal */\n  @Input() public allowEmptyString: boolean = false;\n  @Input() public colordark: string = '#000000';\n  @Input() public colorlight: string = '#ffffff';\n  @Input() public level: string = 'M';\n  @Input() public hidetitle: boolean = false;\n  @Input() public qrdata: string = '';\n  @Input() public size: number = 256;\n  @Input() public usesvg: boolean = false;\n\n  public qrcode: any;\n\n  constructor(\n    public el: ElementRef,\n    @Inject(PLATFORM_ID) private readonly platformId: any,\n  ) { }\n\n  public ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    if (!QRCode) {\n      QRCode = require('qrcodejs2');\n    }\n    try {\n      if (!this.isValidQrCodeText(this.qrdata)) {\n        throw new Error('Empty QR Code data');\n      }\n\n      this.qrcode = new QRCode(this.el.nativeElement, {\n        colorDark: this.colordark,\n        colorLight: this.colorlight,\n        correctLevel: QRCode.CorrectLevel[this.level.toString()],\n        height: this.size,\n        text: this.qrdata || ' ',\n        useSVG: this.usesvg,\n        width: this.size,\n      });\n    } catch (e) {\n      console.error('Error generating QR Code: ' + e.message);\n    }\n\n  }\n\n  public ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\n    if (!this.qrcode) {\n      return;\n    }\n\n    const qrData = changes['qrdata'];\n\n    if (qrData && this.isValidQrCodeText(qrData.currentValue)) {\n      this.qrcode.clear();\n      this.qrcode.makeCode(qrData.currentValue);\n    }\n  }\n\n  protected isValidQrCodeText = (data: string): boolean => {\n    if (this.allowEmptyString === false) {\n      return !(typeof data === 'undefined' || data === '');\n    }\n    return !(typeof data === 'undefined');\n  }\n\n}\n"]}